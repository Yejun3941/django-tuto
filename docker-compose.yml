services:
  backend:
    build: 
      context: ./backend
    env_file:
      - ./backend/.env
    container_name: myapp_backend
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      # - db
      - redis
    # 환경변수, 볼륨 설정 가능
    volumes:
      - static_volume:/backend/staticfiles
    command: >
      sh -c "
      python manage.py collectstatic --noinput &&  
      gunicorn --bind 0.0.0.0:8000 backend.wsgi:application & 
      daphne backend.asgi:application --port 8001 --bind 0.0.0.0"
  
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    container_name: myapp_nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    # 필요하면 volume 설정, environment, etc.
    volumes:
      - static_volume:/backend/staticfiles:ro 
      # volume 으로 공유하면 backend 에서 static 파일을 nginx 에서 사용 가능

  # frontend:
  #   build: 
  #     context: ./frontend
  #   container_name: myapp_frontend
  #   ports:
  #     - "5173:5173"
  #   depends_on:
  #     - backend
  #   command: >
  #     sh -c "npm run dev"

  # 차후 db 를 아래와 같은 postgresql 이나 MariaDB 로 변경
  # db:
  #   image: postgres:14
  #   container_name: myapp_db
  #   environment:
  #     POSTGRES_DB: mydb
  #     POSTGRES_USER: myuser
  #     POSTGRES_PASSWORD: mypass
  #   ports:
  #     - "5432:5432"

  # db:
  #   image: mysql:latest
  #   container_name: myapp_db
  #   environment:
  #     MYSQL_ROOT_PASSWORD: mypass
  #     MYSQL_DATABASE: mydb
  #     MYSQL_USER: myuser
  #     MYSQL_PASSWORD: mypass
  #   ports:
  #     - "3306:3306"
  
  # 우선은 sqlite3 사용

  redis:
    image: redis:latest
    container_name: myapp_redis
    ports:
      - "6379:6379"

volumes:
  static_volume: